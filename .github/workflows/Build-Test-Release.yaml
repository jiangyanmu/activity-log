name: Build-Test-Release

on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # 1️⃣ 取得原始碼
      - uses: actions/checkout@v4

      # 2️⃣ 緩存 node_modules，加快 npm install
      - name: Cache Node modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # 3️⃣ 安裝依賴並 build
      - name: Install dependencies and build
        run: |
          npm install
          npm run build

      # 4️⃣ 上傳 build artifact
      - uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: dist/

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      # 1️⃣ 取得原始碼
      - uses: actions/checkout@v4

      # 2️⃣ 下載 build artifact
      - uses: actions/download-artifact@v4
        with:
          name: build-artifact
          path: dist/

      # 3️⃣ 緩存 node_modules
      - name: Cache Node modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # 4️⃣ 安裝依賴並跑測試
      - name: Run Automated Tests
        run: |
          echo "Running automated tests..."
          npm install
          npm test || (echo "❌ Tests failed" && exit 1)

  release:
    runs-on: ubuntu-latest
    needs: test
    environment: dev
    steps:
      # 1️⃣ 取得原始碼
      - uses: actions/checkout@v4

      # 2️⃣ 下載 build artifact
      - uses: actions/download-artifact@v4
        with:
          name: build-artifact
          path: dist/

      # 3️⃣ 發佈 release
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "✅ Tests passed. Releasing new dev build..."
          gh release create "dev-$(date +%s)" dist/* --notes "Automated release after successful tests"
